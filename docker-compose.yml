version: "3.5"

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    build:
      context: .
    hostname: api01
    environment:
      - DATABASE_URL=mysql://rinha:rinha@127.0.0.1:3306/rinha

    # Não é necessário expor qualquer porta além da porta do load balancer,
    # mas é comum as pessoas o fazerem para testarem suas APIs e conectarem
    # ao banco de dados na fase de desenvolvimento.
    # depends_on:
    #   - db
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "200MB"
  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02
    environment:
      - DATABASE_URL=mysql://rinha:rinha@127.0.0.1:3306/rinha
      - ROCKET_ENV=staging
    ports:
      - 8000:8000

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.17"
          memory: "10MB"

  db:
    image: mariadb:latest
    hostname: db
    restart: always
    environment:
      MARIADB_USER: rinha
      MARIADB_PASSWORD: rinha
      MARIADB_ROOT_PASSWORD: rinha
    volumes:
      - "./mariadb-data/data:/var/lib/mysql/data/"
      - "./mariadb-data/logs:/var/lib/mysql/logs/"
    ports:
      - 3306:3306
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.13"
          memory: "140MB"

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024-q1
